name: Build and Push Docker Image to ECR
on:
  push:
    branches:
      - main
      
jobs:
  # docker-build-and-push:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install AWS CLI and Docker
  #       uses: ./.github/composite-actions/install-tools
  #       with:
  #         aws_version: 'latest'  
  #         docker_version: 'latest'  
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-south-1
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2

  #     - name: Verify AWS CLI configuration
  #       run: aws sts get-caller-identity
      
  #     - name: Docker Build Push
  #       run: |
  #         ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
  #         docker build -t ${ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/prod-zalon-review-service-repository:devops . -f Dockerfile.prod
  #         docker push ${ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com/prod-zalon-review-service-repository:devops
  Approve-Deploy:
    runs-on: ubuntu-latest
    #needs: docker-build-and-push
    environment: prod
    steps:
      - name: Fetch approval comments
        id: fetch-comments
        run: |
          GITHUB_API_URL="https://api.github.com"
          echo "1"
          RUN_ID=${{ github.run_id }}
          echo "2"
          curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" "$GITHUB_API_URL/repos/${{ github.repository }}/actions/runs/$RUN_ID"
          COMMENTS_URL=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/actions/runs/$RUN_ID" | jq -r '.logs_url')
          echo "COMMENT_URL : ${COMMENTS_UR}"
          # Extract the issue number from the logs URL
          ISSUE_NUMBER=$(echo $COMMENTS_URL | grep -oE '[0-9]+$')
          echo "ISSUE_NUMBER : ${ISSUE_NUMBER}"
          # Fetch comments
          COMMENTS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments" | jq -r '.[].body')
          echo "COMMENTS : ${COMMENTS}"
          echo "Approval comments: $COMMENTS"
          echo "::set-output name=comments::$COMMENTS"

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker-build-and-push
  #   environment: prod
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install AWS CLI and Docker
  #       uses: ./.github/composite-actions/install-tools
  #       with:
  #         aws_version: 'latest'  
  #         docker_version: 'latest'  
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-south-1
      
  #     - name: Restart ECS service
  #       run: |
  #         aws ecs update-service \
  #           --cluster prod-zalon-cluster \
  #           --service prod-zalon-review-service \
  #           --force-new-deployment


      
      